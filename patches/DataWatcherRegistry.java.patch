--- minecraft/src/net/minecraft/server/DataWatcherRegistry.java	2016-06-04 07:22:15.705541171 -0700
+++ src/main/java/net/minecraft/server/DataWatcherRegistry.java	2016-06-04 20:53:25.890940539 -0700
@@ -7,7 +7,7 @@
 public class DataWatcherRegistry {
 
     private static final RegistryID<DataWatcherSerializer<?>> n = new RegistryID(16);
-    public static final DataWatcherSerializer<Byte> a = new DataWatcherSerializer() {
+    public static final DataWatcherSerializer<Byte> a = new DataWatcherSerializer<Byte>() { // Fountain: Fix decompiler error
         public void a(PacketDataSerializer packetdataserializer, Byte obyte) {
             packetdataserializer.writeByte(obyte.byteValue());
         }
@@ -20,11 +20,11 @@
             return new DataWatcherObject(i, this);
         }
 
-        public Object a(PacketDataSerializer packetdataserializer) {
+        public Byte a(PacketDataSerializer packetdataserializer) { // Fountain: Fix decompiler error
             return this.b(packetdataserializer);
         }
     };
-    public static final DataWatcherSerializer<Integer> b = new DataWatcherSerializer() {
+    public static final DataWatcherSerializer<Integer> b = new DataWatcherSerializer<Integer>() { // Fountain: Fix decompiler error
         public void a(PacketDataSerializer packetdataserializer, Integer integer) {
             packetdataserializer.d(integer.intValue());
         }
@@ -37,13 +37,13 @@
             return new DataWatcherObject(i, this);
         }
 
-        public Object a(PacketDataSerializer packetdataserializer) {
+        public Integer a(PacketDataSerializer packetdataserializer) { // Fountain: Fix decompiler error
             return this.b(packetdataserializer);
         }
     };
-    public static final DataWatcherSerializer<Float> c = new DataWatcherSerializer() {
-        public void a(PacketDataSerializer packetdataserializer, Float float) {
-            packetdataserializer.writeFloat(float.floatValue());
+    public static final DataWatcherSerializer<Float> c = new DataWatcherSerializer<Float>() { // Fountain: Fix decompiler error
+        public void a(PacketDataSerializer packetdataserializer, Float f) { // Fountain: Fix decompiler error
+            packetdataserializer.writeFloat(f.floatValue());
         }
 
         public Float b(PacketDataSerializer packetdataserializer) {
@@ -54,11 +54,11 @@
             return new DataWatcherObject(i, this);
         }
 
-        public Object a(PacketDataSerializer packetdataserializer) {
+        public Float a(PacketDataSerializer packetdataserializer) { // Fountain: Fix decompiler error
             return this.b(packetdataserializer);
         }
     };
-    public static final DataWatcherSerializer<String> d = new DataWatcherSerializer() {
+    public static final DataWatcherSerializer<String> d = new DataWatcherSerializer<String>() { // Fountain: Fix decompiler error
         public void a(PacketDataSerializer packetdataserializer, String s) {
             packetdataserializer.a(s);
         }
@@ -71,11 +71,11 @@
             return new DataWatcherObject(i, this);
         }
 
-        public Object a(PacketDataSerializer packetdataserializer) {
+        public String a(PacketDataSerializer packetdataserializer) { // Fountain: Fix decompiler error
             return this.b(packetdataserializer);
         }
     };
-    public static final DataWatcherSerializer<IChatBaseComponent> e = new DataWatcherSerializer() {
+    public static final DataWatcherSerializer<IChatBaseComponent> e = new DataWatcherSerializer<IChatBaseComponent>() { // Fountain: Fix decompiler error
         public void a(PacketDataSerializer packetdataserializer, IChatBaseComponent ichatbasecomponent) {
             packetdataserializer.a(ichatbasecomponent);
         }
@@ -88,11 +88,11 @@
             return new DataWatcherObject(i, this);
         }
 
-        public Object a(PacketDataSerializer packetdataserializer) {
+        public IChatBaseComponent a(PacketDataSerializer packetdataserializer) { // Fountain: Fix decompiler error
             return this.b(packetdataserializer);
         }
     };
-    public static final DataWatcherSerializer<Optional<ItemStack>> f = new DataWatcherSerializer() {
+    public static final DataWatcherSerializer<Optional<ItemStack>> f = new DataWatcherSerializer<Optional<ItemStack>>() { // Fountain: Fix decompiler error
         public void a(PacketDataSerializer packetdataserializer, Optional<ItemStack> optional) {
             packetdataserializer.a((ItemStack) optional.orNull());
         }
@@ -105,11 +105,11 @@
             return new DataWatcherObject(i, this);
         }
 
-        public Object a(PacketDataSerializer packetdataserializer) {
+        public Optional<ItemStack> a(PacketDataSerializer packetdataserializer) { // Fountain: Fix decompiler error
             return this.b(packetdataserializer);
         }
     };
-    public static final DataWatcherSerializer<Optional<IBlockData>> g = new DataWatcherSerializer() {
+    public static final DataWatcherSerializer<Optional<IBlockData>> g = new DataWatcherSerializer<Optional<IBlockData>>() { // Fountain: Fix decompiler error
         public void a(PacketDataSerializer packetdataserializer, Optional<IBlockData> optional) {
             if (optional.isPresent()) {
                 packetdataserializer.d(Block.getCombinedId((IBlockData) optional.get()));
@@ -129,11 +129,11 @@
             return new DataWatcherObject(i, this);
         }
 
-        public Object a(PacketDataSerializer packetdataserializer) {
+        public Optional<IBlockData> a(PacketDataSerializer packetdataserializer) {
             return this.b(packetdataserializer);
         }
     };
-    public static final DataWatcherSerializer<Boolean> h = new DataWatcherSerializer() {
+    public static final DataWatcherSerializer<Boolean> h = new DataWatcherSerializer<Boolean>() { // Fountain: Fix decompiler error
         public void a(PacketDataSerializer packetdataserializer, Boolean obool) {
             packetdataserializer.writeBoolean(obool.booleanValue());
         }
@@ -146,11 +146,11 @@
             return new DataWatcherObject(i, this);
         }
 
-        public Object a(PacketDataSerializer packetdataserializer) {
+        public Boolean a(PacketDataSerializer packetdataserializer) { // Fountain: Fix decompiler error
             return this.b(packetdataserializer);
         }
     };
-    public static final DataWatcherSerializer<Vector3f> i = new DataWatcherSerializer() {
+    public static final DataWatcherSerializer<Vector3f> i = new DataWatcherSerializer<Vector3f>() { // Fountain: Fix decompiler error
         public void a(PacketDataSerializer packetdataserializer, Vector3f vector3f) {
             packetdataserializer.writeFloat(vector3f.getX());
             packetdataserializer.writeFloat(vector3f.getY());
@@ -165,11 +165,11 @@
             return new DataWatcherObject(i, this);
         }
 
-        public Object a(PacketDataSerializer packetdataserializer) {
+        public Vector3f a(PacketDataSerializer packetdataserializer) { // Fountain: Fix decompiler error
             return this.b(packetdataserializer);
         }
     };
-    public static final DataWatcherSerializer<BlockPosition> j = new DataWatcherSerializer() {
+    public static final DataWatcherSerializer<BlockPosition> j = new DataWatcherSerializer<BlockPosition>() { // Fountain: Fix decompiler error
         public void a(PacketDataSerializer packetdataserializer, BlockPosition blockposition) {
             packetdataserializer.a(blockposition);
         }
@@ -182,11 +182,11 @@
             return new DataWatcherObject(i, this);
         }
 
-        public Object a(PacketDataSerializer packetdataserializer) {
+        public BlockPosition a(PacketDataSerializer packetdataserializer) { // Fountain: Fix decompiler error
             return this.b(packetdataserializer);
         }
     };
-    public static final DataWatcherSerializer<Optional<BlockPosition>> k = new DataWatcherSerializer() {
+    public static final DataWatcherSerializer<Optional<BlockPosition>> k = new DataWatcherSerializer<Optional<BlockPosition>>() { // Fountain: Fix decompiler error
         public void a(PacketDataSerializer packetdataserializer, Optional<BlockPosition> optional) {
             packetdataserializer.writeBoolean(optional.isPresent());
             if (optional.isPresent()) {
@@ -203,11 +203,11 @@
             return new DataWatcherObject(i, this);
         }
 
-        public Object a(PacketDataSerializer packetdataserializer) {
+        public Optional<BlockPosition> a(PacketDataSerializer packetdataserializer) { // Fountain: Fix decompiler error
             return this.b(packetdataserializer);
         }
     };
-    public static final DataWatcherSerializer<EnumDirection> l = new DataWatcherSerializer() {
+    public static final DataWatcherSerializer<EnumDirection> l = new DataWatcherSerializer<EnumDirection>() { // Fountain: Fix decompiler error
         public void a(PacketDataSerializer packetdataserializer, EnumDirection enumdirection) {
             packetdataserializer.a((Enum) enumdirection);
         }
@@ -220,11 +220,11 @@
             return new DataWatcherObject(i, this);
         }
 
-        public Object a(PacketDataSerializer packetdataserializer) {
+        public EnumDirection a(PacketDataSerializer packetdataserializer) { // Fountain: Fix decompiler error
             return this.b(packetdataserializer);
         }
     };
-    public static final DataWatcherSerializer<Optional<UUID>> m = new DataWatcherSerializer() {
+    public static final DataWatcherSerializer<Optional<UUID>> m = new DataWatcherSerializer<Optional<UUID>>() { // Fountain: Fix decompiler error
         public void a(PacketDataSerializer packetdataserializer, Optional<UUID> optional) {
             packetdataserializer.writeBoolean(optional.isPresent());
             if (optional.isPresent()) {
@@ -241,7 +241,7 @@
             return new DataWatcherObject(i, this);
         }
 
-        public Object a(PacketDataSerializer packetdataserializer) {
+        public Optional<UUID> a(PacketDataSerializer packetdataserializer) { // Fountain: Fix decompiler error
             return this.b(packetdataserializer);
         }
     };
