--- minecraft/src/net/minecraft/command/EntitySelector.java	2016-06-04 22:55:00.317727825 -0700
+++ src/main/java/net/minecraft/command/EntitySelector.java	2016-06-04 23:53:00.741844612 -0700
@@ -7,6 +7,7 @@
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.HashMap;
@@ -58,11 +59,11 @@
 
    @Nullable
    public static ITextComponent matchEntitiesToTextComponent(ICommandSender var0, String var1) {
-      List var2 = matchEntities(var0, var1, Entity.class);
+      List<Entity> var2 = matchEntities(var0, var1, Entity.class);
       if(var2.isEmpty()) {
          return null;
       } else {
-         ArrayList var3 = Lists.newArrayList();
+         ArrayList<ITextComponent> var3 = Lists.newArrayList();
 
          for(Entity var5 : var2) {
             var3.add(var5.getDisplayName());
@@ -75,19 +76,19 @@
    public static <T extends Entity> List<T> matchEntities(ICommandSender var0, String var1, Class<? extends T> var2) {
       Matcher var3 = TOKEN_PATTERN.matcher(var1);
       if(var3.matches() && var0.canCommandSenderUseCommand(1, "@")) {
-         Map var4 = getArgumentMap(var3.group(2));
+         Map<String, String> var4 = getArgumentMap(var3.group(2));
          if(!isEntityTypeValid(var0, var4)) {
             return Collections.emptyList();
          } else {
             String var5 = var3.group(1);
             BlockPos var6 = getBlockPosFromArguments(var4, var0.getPosition());
             Vec3d var7 = getPosFromArguments(var4, var0.getPositionVector());
-            List var8 = getWorlds(var0, var4);
-            ArrayList var9 = Lists.newArrayList();
+            List<World> var8 = getWorlds(var0, var4);
+            ArrayList<Entity> var9 = Lists.newArrayList();
 
             for(World var11 : var8) {
                if(var11 != null) {
-                  ArrayList var12 = Lists.newArrayList();
+                  ArrayList<Predicate<Entity>> var12 = Lists.newArrayList();
                   var12.addAll(getTypePredicates(var4, var5));
                   var12.addAll(getXpLevelPredicates(var4));
                   var12.addAll(getGamemodePredicates(var4));
@@ -101,7 +102,7 @@
                }
             }
 
-            return getEntitiesFromPredicates(var9, var4, var0, var2, var5, var7);
+            return (List<T>) getEntitiesFromPredicates(var9, var4, var0, var2, var5, var7);
          }
       } else {
          return Collections.emptyList();
@@ -133,13 +134,14 @@
    }
 
    private static List<Predicate<Entity>> getTypePredicates(Map<String, String> var0, String var1) {
-      ArrayList var2 = Lists.newArrayList();
-      final String var3 = getArgument(var0, "type");
+      ArrayList<Predicate<Entity>> var2 = Lists.newArrayList();
+      String var3 = getArgument(var0, "type");
       final boolean var4 = var3 != null && var3.startsWith("!");
       if(var4) {
          var3 = var3.substring(1);
       }
 
+      final String var3f = var3;
       boolean var6 = !var1.equals("e");
       boolean var7 = var1.equals("r") && var3 != null;
       if((var3 == null || !var1.equals("e")) && !var7) {
@@ -148,22 +150,12 @@
                public boolean apply(@Nullable Entity var1) {
                   return var1 instanceof EntityPlayer;
                }
-
-               // $FF: synthetic method
-               public boolean apply(Object var1) {
-                  return this.apply((Entity)var1);
-               }
             });
          }
       } else {
          var2.add(new Predicate<Entity>() {
             public boolean apply(@Nullable Entity var1) {
-               return EntityList.isStringEntityName(var1, var3) != var4;
-            }
-
-            // $FF: synthetic method
-            public boolean apply(Object var1) {
-               return this.apply((Entity)var1);
+               return EntityList.isStringEntityName(var1, var3f) != var4;
             }
          });
       }
@@ -172,7 +164,7 @@
    }
 
    private static List<Predicate<Entity>> getXpLevelPredicates(Map<String, String> var0) {
-      ArrayList var1 = Lists.newArrayList();
+      ArrayList<Predicate<Entity>> var1 = Lists.newArrayList();
       final int var2 = parseIntWithDefault(var0, "lm", -1);
       final int var3 = parseIntWithDefault(var0, "l", -1);
       if(var2 > -1 || var3 > -1) {
@@ -185,11 +177,6 @@
                   return (var2 <= -1 || var2x.experienceLevel >= var2) && (var3 <= -1 || var2x.experienceLevel <= var3);
                }
             }
-
-            // $FF: synthetic method
-            public boolean apply(Object var1) {
-               return this.apply((Entity)var1);
-            }
          });
       }
 
@@ -197,7 +184,7 @@
    }
 
    private static List<Predicate<Entity>> getGamemodePredicates(Map<String, String> var0) {
-      ArrayList var1 = Lists.newArrayList();
+      ArrayList<Predicate<Entity>> var1 = Lists.newArrayList();
       String var2 = getArgument(var0, "m");
       if(var2 == null) {
          return var1;
@@ -207,14 +194,15 @@
             var2 = var2.substring(1);
          }
 
-         final WorldSettings.a var4;
+         WorldSettings.a var4;
          try {
             int var5 = Integer.parseInt(var2);
             var4 = WorldSettings.a.parseGameTypeWithDefault(var5, WorldSettings.a.NOT_SET);
          } catch (Throwable var6) {
             var4 = WorldSettings.a.parseGameTypeWithDefault(var2, WorldSettings.a.NOT_SET);
          }
-
+         
+         final WorldSettings.a var4f = var4;
          var1.add(new Predicate<Entity>() {
             public boolean apply(@Nullable Entity var1) {
                if(!(var1 instanceof EntityPlayerMP)) {
@@ -222,27 +210,23 @@
                } else {
                   EntityPlayerMP var2 = (EntityPlayerMP)var1;
                   WorldSettings.a var3x = var2.interactionManager.getGameType();
-                  return var3?var3x != var4:var3x == var4;
+                  return var3?var3x != var4f:var3x == var4f;
                }
             }
-
-            // $FF: synthetic method
-            public boolean apply(Object var1) {
-               return this.apply((Entity)var1);
-            }
          });
          return var1;
       }
    }
 
    private static List<Predicate<Entity>> getTeamPredicates(Map<String, String> var0) {
-      ArrayList var1 = Lists.newArrayList();
-      final String var2 = getArgument(var0, "team");
+      ArrayList<Predicate<Entity>> var1 = Lists.newArrayList();
+      String var2 = getArgument(var0, "team");
       final boolean var3 = var2 != null && var2.startsWith("!");
       if(var3) {
          var2 = var2.substring(1);
       }
 
+      final String var2f = var2; 
       if(var2 != null) {
          var1.add(new Predicate<Entity>() {
             public boolean apply(@Nullable Entity var1) {
@@ -252,14 +236,9 @@
                   EntityLivingBase var2x = (EntityLivingBase)var1;
                   Team var3x = var2x.getTeam();
                   String var4 = var3x == null?"":var3x.getRegisteredName();
-                  return var4.equals(var2) != var3;
+                  return var4.equals(var2f) != var3;
                }
             }
-
-            // $FF: synthetic method
-            public boolean apply(Object var1) {
-               return this.apply((Entity)var1);
-            }
          });
       }
 
@@ -267,7 +246,7 @@
    }
 
    private static List<Predicate<Entity>> getScorePredicates(final ICommandSender var0, Map<String, String> var1) {
-      final Map var2 = getScoreMap(var1);
+      final Map<String, Integer> var2 = getScoreMap(var1);
       return (List<Predicate<Entity>>)(var2.isEmpty()?Collections.emptyList():Lists.newArrayList(new Predicate[]{new Predicate<Entity>() {
          public boolean apply(@Nullable Entity var1) {
             if(var1 == null) {
@@ -307,31 +286,22 @@
                return true;
             }
          }
-
-         // $FF: synthetic method
-         public boolean apply(Object var1) {
-            return this.apply((Entity)var1);
-         }
       }}));
    }
 
    private static List<Predicate<Entity>> getNamePredicates(Map<String, String> var0) {
-      ArrayList var1 = Lists.newArrayList();
-      final String var2 = getArgument(var0, "name");
+      ArrayList<Predicate<Entity>> var1 = Lists.newArrayList();
+      String var2 = getArgument(var0, "name");
       final boolean var3 = var2 != null && var2.startsWith("!");
       if(var3) {
          var2 = var2.substring(1);
       }
 
+      final String var2f = var2;
       if(var2 != null) {
          var1.add(new Predicate<Entity>() {
             public boolean apply(@Nullable Entity var1) {
-               return var1 != null && var1.getName().equals(var2) != var3;
-            }
-
-            // $FF: synthetic method
-            public boolean apply(Object var1) {
-               return this.apply((Entity)var1);
+               return var1 != null && var1.getName().equals(var2f) != var3;
             }
          });
       }
@@ -340,22 +310,18 @@
    }
 
    private static List<Predicate<Entity>> getTagPredicates(Map<String, String> var0) {
-      ArrayList var1 = Lists.newArrayList();
-      final String var2 = getArgument(var0, "tag");
+      ArrayList<Predicate<Entity>> var1 = Lists.newArrayList();
+      String var2 = getArgument(var0, "tag");
       final boolean var3 = var2 != null && var2.startsWith("!");
       if(var3) {
          var2 = var2.substring(1);
       }
 
+      final String var2f = var2;
       if(var2 != null) {
          var1.add(new Predicate<Entity>() {
             public boolean apply(@Nullable Entity var1) {
-               return var1 == null?false:("".equals(var2)?var1.getTags().isEmpty() != var3:var1.getTags().contains(var2) != var3);
-            }
-
-            // $FF: synthetic method
-            public boolean apply(Object var1) {
-               return this.apply((Entity)var1);
+               return var1 == null?false:("".equals(var2f)?var1.getTags().isEmpty() != var3:var1.getTags().contains(var2f) != var3);
             }
          });
       }
@@ -384,17 +350,12 @@
                   return (var6 || var2 >= var10) && (var7 || var2 <= var14);
                }
             }
-
-            // $FF: synthetic method
-            public boolean apply(Object var1x) {
-               return this.apply((Entity)var1x);
-            }
          }});
       }
    }
 
    private static List<Predicate<Entity>> getRotationsPredicates(Map<String, String> var0) {
-      ArrayList var1 = Lists.newArrayList();
+      ArrayList<Predicate<Entity>> var1 = Lists.newArrayList();
       if(var0.containsKey("rym") || var0.containsKey("ry")) {
          final int var2 = MathHelper.clampAngle(parseIntWithDefault(var0, "rym", 0));
          final int var3 = MathHelper.clampAngle(parseIntWithDefault(var0, "ry", 359));
@@ -407,11 +368,6 @@
                   return var2 > var3?var2x >= var2 || var2x <= var3:var2x >= var2 && var2x <= var3;
                }
             }
-
-            // $FF: synthetic method
-            public boolean apply(Object var1) {
-               return this.apply((Entity)var1);
-            }
          });
       }
 
@@ -427,11 +383,6 @@
                   return var4 > var5?var2 >= var4 || var2 <= var5:var2 >= var4 && var2 <= var5;
                }
             }
-
-            // $FF: synthetic method
-            public boolean apply(Object var1) {
-               return this.apply((Entity)var1);
-            }
          });
       }
 
@@ -475,11 +426,6 @@
                public boolean apply(@Nullable Entity var1) {
                   return var1 != null && var19.intersectsWith(var1.getEntityBoundingBox());
                }
-
-               // $FF: synthetic method
-               public boolean apply(Object var1) {
-                  return this.apply((Entity)var1);
-               }
             };
             var6.addAll(var4.getPlayers(var1, Predicates.and(var15, var20)));
          } else {
@@ -501,17 +447,12 @@
             public int compare(Entity var1, Entity var2) {
                return ComparisonChain.start().compare(var1.getDistanceSq(var5.xCoord, var5.yCoord, var5.zCoord), var2.getDistanceSq(var5.xCoord, var5.yCoord, var5.zCoord)).result();
             }
-
-            // $FF: synthetic method
-            public int compare(Object var1, Object var2) {
-               return this.compare((Entity)var1, (Entity)var2);
-            }
          });
       }
 
       Entity var7 = var2.getCommandSenderEntity();
       if(var7 != null && var3.isAssignableFrom(var7.getClass()) && var6 == 1 && ((List)var0).contains(var7) && !"r".equals(var4)) {
-         var0 = Lists.newArrayList(new Entity[]{var7});
+         var0 = (List<T>) Lists.newArrayList(new Entity[]{var7});
       }
 
       if(var6 != 0) {
