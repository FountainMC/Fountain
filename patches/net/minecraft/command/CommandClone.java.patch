--- minecraft/src/net/minecraft/command/CommandClone.java
+++ src/main/java/net/minecraft/command/CommandClone.java
@@ -80,14 +80,14 @@
                               var12 = parseInt(var3[12], 0, 15);
                            }
                         }
                      }
 
-                     ArrayList var15 = Lists.newArrayList();
-                     ArrayList var16 = Lists.newArrayList();
-                     ArrayList var17 = Lists.newArrayList();
-                     LinkedList var18 = Lists.newLinkedList();
+                     ArrayList<CommandClone.a> var15 = Lists.newArrayList();
+                     ArrayList<CommandClone.a> var16 = Lists.newArrayList();
+                     ArrayList<CommandClone.a> var17 = Lists.newArrayList();
+                     LinkedList<BlockPos> var18 = Lists.newLinkedList();
                      BlockPos var19 = new BlockPos(var8.minX - var7.minX, var8.minY - var7.minY, var8.minZ - var7.minZ);
 
                      for(int var20 = var7.minZ; var20 <= var7.maxZ; ++var20) {
                         for(int var21 = var7.minY; var21 <= var7.maxY; ++var21) {
                            for(int var22 = var7.minX; var22 <= var7.maxX; ++var22) {
@@ -125,15 +125,15 @@
                         for(BlockPos var33 : var18) {
                            var13.setBlockState(var33, Blocks.AIR.getDefaultState(), 3);
                         }
                      }
 
-                     ArrayList var31 = Lists.newArrayList();
+                     ArrayList<CommandClone.a> var31 = Lists.newArrayList();
                      var31.addAll(var15);
                      var31.addAll(var16);
                      var31.addAll(var17);
-                     List var34 = Lists.reverse(var31);
+                     List<CommandClone.a> var34 = Lists.reverse(var31);
 
                      for(CommandClone.a var41 : var34) {
                         TileEntity var46 = var13.getTileEntity(var41.pos);
                         if(var46 instanceof IInventory) {
                            ((IInventory)var46).clear();
@@ -165,11 +165,11 @@
 
                      for(CommandClone.a var44 : var34) {
                         var13.notifyNeighborsRespectDebug(var44.pos, var44.blockState.getBlock());
                      }
 
-                     List var40 = var13.getPendingBlockUpdates(var7, false);
+                     List<NextTickListEntry> var40 = var13.getPendingBlockUpdates(var7, false);
                      if(var40 != null) {
                         for(NextTickListEntry var48 : var40) {
                            if(var7.isVecInside(var48.position)) {
                               BlockPos var49 = var48.position.add(var19);
                               var13.scheduleBlockUpdate(var49, var48.getBlock(), (int)(var48.scheduledTime - var13.getWorldInfo().getWorldTotalTime()), var48.priority);
