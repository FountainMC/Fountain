--- minecraft/src/net/minecraft/server/management/PlayerInteractionManager.java
+++ src/main/java/net/minecraft/server/management/PlayerInteractionManager.java
@@ -195,10 +195,17 @@
 
       return var3;
    }
 
    public boolean tryHarvestBlock(BlockPos var1) {
+      org.fountainmc.api.event.world.BlockBreakEvent event = new org.fountainmc.api.event.world.BlockBreakEvent(
+          new org.fountainmc.api.world.BlockPosition(new org.fountainmc.world.WetWorld(theWorld), var1.getX(), var1.getY(), var1.getZ()));
+      org.fountainmc.api.Fountain.getServer().getPluginManager().fireEvent(event);
+      if(event.isCancelled()) {
+          thisPlayerMP.connection.sendPacket(new SPacketBlockChange(theWorld, var1));
+          return false;
+      }
       if(this.gameType.isCreative() && this.thisPlayerMP.getHeldItemMainhand() != null && this.thisPlayerMP.getHeldItemMainhand().getItem() instanceof ItemSword) {
          return false;
       } else {
          IBlockState var2 = this.theWorld.getBlockState(var1);
          TileEntity var3 = this.theWorld.getTileEntity(var1);
@@ -254,11 +261,11 @@
       } else if(var1.getCooldownTracker().hasCooldown(var3.getItem())) {
          return EnumActionResult.PASS;
       } else {
          int var5 = var3.stackSize;
          int var6 = var3.getMetadata();
-         ActionResult var7 = var3.useItemRightClick(var2, var1, var4);
+         ActionResult<ItemStack> var7 = var3.useItemRightClick(var2, var1, var4);
          ItemStack var8 = (ItemStack)var7.getResult();
          if(var8 == var3 && var8.stackSize == var5 && var8.getMaxItemUseDuration() <= 0 && var8.getMetadata() == var6) {
             return var7.getType();
          } else {
             var1.setHeldItem(var4, var8);
